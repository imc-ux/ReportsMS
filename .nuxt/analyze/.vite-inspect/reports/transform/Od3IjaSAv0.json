{
  "resolvedId": "E:/gitProject/ReportsMS/node_modules/element-plus/es/components/collapse/src/use-collapse-item.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { inject, ref, computed, unref } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { collapseContextKey } from './constants.mjs';\nimport { generateId } from '../../../utils/rand.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst useCollapseItem = (props) => {\n  const collapse = inject(collapseContextKey);\n  const focusing = ref(false);\n  const isClick = ref(false);\n  const id = ref(generateId());\n  const isActive = computed(() => collapse == null ? void 0 : collapse.activeNames.value.includes(props.name));\n  const handleFocus = () => {\n    setTimeout(() => {\n      if (!isClick.value) {\n        focusing.value = true;\n      } else {\n        isClick.value = false;\n      }\n    }, 50);\n  };\n  const handleHeaderClick = () => {\n    if (props.disabled)\n      return;\n    collapse == null ? void 0 : collapse.handleItemClick(props.name);\n    focusing.value = false;\n    isClick.value = true;\n  };\n  const handleEnterClick = () => {\n    collapse == null ? void 0 : collapse.handleItemClick(props.name);\n  };\n  return {\n    focusing,\n    id,\n    isActive,\n    handleFocus,\n    handleHeaderClick,\n    handleEnterClick\n  };\n};\nconst useCollapseItemDOM = (props, { focusing, isActive, id }) => {\n  const ns = useNamespace(\"collapse\");\n  const rootKls = computed(() => [\n    ns.b(\"item\"),\n    ns.is(\"active\", unref(isActive)),\n    ns.is(\"disabled\", props.disabled)\n  ]);\n  const headKls = computed(() => [\n    ns.be(\"item\", \"header\"),\n    ns.is(\"active\", unref(isActive)),\n    { focusing: unref(focusing) && !props.disabled }\n  ]);\n  const arrowKls = computed(() => [\n    ns.be(\"item\", \"arrow\"),\n    ns.is(\"active\", unref(isActive))\n  ]);\n  const itemWrapperKls = computed(() => ns.be(\"item\", \"wrap\"));\n  const itemContentKls = computed(() => ns.be(\"item\", \"content\"));\n  const scopedContentId = computed(() => ns.b(`content-${unref(id)}`));\n  const scopedHeadId = computed(() => ns.b(`head-${unref(id)}`));\n  return {\n    arrowKls,\n    headKls,\n    rootKls,\n    itemWrapperKls,\n    itemContentKls,\n    scopedContentId,\n    scopedHeadId\n  };\n};\n\nexport { useCollapseItem, useCollapseItemDOM };\n//# sourceMappingURL=use-collapse-item.mjs.map\n",
      "start": 1701916806798,
      "end": 1701916807111,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1701916807111,
      "end": 1701916807111,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1701916807111,
      "end": 1701916807111,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1701916807111,
      "end": 1701916807111,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1701916807111,
      "end": 1701916807111,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1701916807111,
      "end": 1701916807111,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701916807111,
      "end": 1701916807111,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701916807111,
      "end": 1701916807111,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1701916807111,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701916807112,
      "end": 1701916807112,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1701916807113,
      "end": 1701916807113,
      "order": "normal"
    }
  ]
}
